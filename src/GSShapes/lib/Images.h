/*
* Generated by SGWrapperGen - DO NOT EDIT!
*
* SwinGame wrapper for C - Images
*
* Wrapping sgImages.pas
*/

#include <stdbool.h>
#include <stdint.h>

#ifndef sgImages
#define sgImages
#include "Types.h"

circle bitmap_cell_circle(bitmap bmp, const point2d *pt);
circle bitmap_cell_circle_byval(bitmap bmp, const point2d pt);
circle bitmap_cell_circle_xy(bitmap bmp, int32_t x, int32_t y);
int32_t bitmap_cell_columns(bitmap bmp);
int32_t bitmap_cell_count(bitmap bmp);
int32_t bitmap_cell_height(bitmap bmp);
bitmap_cell bitmap_cell_of(bitmap bmp, int32_t cell);
rectangle bitmap_cell_rectangle_at_origin(bitmap bmp);
rectangle bitmap_cell_rectangle(const point2d *pt, bitmap bmp);
rectangle bitmap_cell_rectangle_byval(const point2d pt, bitmap bmp);
rectangle bitmap_cell_rectangle_xy(float x, float y, bitmap bmp);
int32_t bitmap_cell_rows(bitmap bmp);
int32_t bitmap_cell_width(bitmap bmp);
circle bitmap_circle(bitmap bmp, const point2d *pt);
circle bitmap_circle_byval(bitmap bmp, const point2d pt);
circle bitmap_circle_xy(bitmap bmp, int32_t x, int32_t y);
void bitmap_filename(bitmap bmp, char *result);
int32_t bitmap_height_for_cell(const bitmap_cell *bmp);
int32_t bitmap_height_for_cell_byval(const bitmap_cell bmp);
int32_t bitmap_height(bitmap bmp);
void bitmap_name(bitmap bmp, char *result);
bitmap bitmap_named(const char *name);
rectangle bitmap_rect_at_origin(bitmap bmp);
rectangle bitmap_rect_xy(float x, float y, bitmap bmp);
rectangle bitmap_rectangle_of_cell(bitmap src, int32_t cell);
void bitmap_set_cell_details(bitmap bmp, int32_t width, int32_t height, int32_t columns, int32_t rows, int32_t count);
int32_t bitmap_width(bitmap bmp);
int32_t bitmap_width_for_cell(const bitmap_cell *bmp);
int32_t bitmap_width_for_cell_byval(const bitmap_cell bmp);
bool bitmaps_interchangable(bitmap bmp1, bitmap bmp2);
void clear_surface_to_black(bitmap dest);
void clear_surface(bitmap dest, color toColor);
bitmap combine_into_grid(const bitmap *bitmaps, int32_t cols, int32_t bitmaps_len);
bitmap combine_into_grid_byval(const bitmap *bitmaps, int32_t cols, int32_t bitmaps_len);
bitmap create_bitmap(int32_t width, int32_t height);
bitmap create_bitmap_named(const char *name, int32_t width, int32_t height);
void draw_bitmap(bitmap src, float x, float y);
void draw_bitmap_named(const char *name, float x, float y);
void draw_bitmap_named_at_point(const char *name, const point2d *position);
void draw_bitmap_named_at_point_byval(const char *name, const point2d position);
void draw_bitmap_at_point(bitmap src, const point2d *position);
void draw_bitmap_at_point_byval(bitmap src, const point2d position);
void draw_bitmap_at_point_onto(bitmap dest, bitmap src, const point2d *position);
void draw_bitmap_at_point_onto_byval(bitmap dest, bitmap src, const point2d position);
void draw_bitmap_onto(bitmap dest, bitmap src, int32_t x, int32_t y);
void draw_bitmap_cell_at_point(const bitmap_cell *src, const point2d *position);
void draw_bitmap_cell_at_point_byval(const bitmap_cell src, const point2d position);
void draw_bitmap_cell(const bitmap_cell *src, float x, float y);
void draw_bitmap_cell_byval(const bitmap_cell src, float x, float y);
void draw_bitmap_cell_at_point_onto(bitmap dest, const bitmap_cell *src, const point2d *position);
void draw_bitmap_cell_at_point_onto_byval(bitmap dest, const bitmap_cell src, const point2d position);
void draw_bitmap_cell_onto(bitmap dest, const bitmap_cell *src, int32_t x, int32_t y);
void draw_bitmap_cell_onto_byval(bitmap dest, const bitmap_cell src, int32_t x, int32_t y);
void draw_bitmap_cell_at_point_on_screen(const bitmap_cell *src, const point2d *position);
void draw_bitmap_cell_at_point_on_screen_byval(const bitmap_cell src, const point2d position);
void draw_bitmap_cell_on_screen(const bitmap_cell *src, int32_t x, int32_t y);
void draw_bitmap_cell_on_screen_byval(const bitmap_cell src, int32_t x, int32_t y);
void draw_bitmap_at_point_on_screen(bitmap src, const point2d *position);
void draw_bitmap_at_point_on_screen_byval(bitmap src, const point2d position);
void draw_bitmap_on_screen(bitmap src, int32_t x, int32_t y);
void draw_bitmap_part_from_rect_at_point(bitmap src, const rectangle *source, const point2d *position);
void draw_bitmap_part_from_rect_at_point_byval(bitmap src, const rectangle source, const point2d position);
void draw_bitmap_part_from_rect(bitmap src, const rectangle *source, float x, float y);
void draw_bitmap_part_from_rect_byval(bitmap src, const rectangle source, float x, float y);
void draw_bitmap_part_from_rect_at_point_onto(bitmap dest, bitmap src, const rectangle *source, const point2d *position);
void draw_bitmap_part_from_rect_at_point_onto_byval(bitmap dest, bitmap src, const rectangle source, const point2d position);
void draw_bitmap_part_from_rect_onto(bitmap dest, bitmap src, const rectangle *source, int32_t x, int32_t y);
void draw_bitmap_part_from_rect_onto_byval(bitmap dest, bitmap src, const rectangle source, int32_t x, int32_t y);
void draw_bitmap_part(bitmap src, int32_t srcX, int32_t srcY, int32_t srcW, int32_t srcH, float x, float y);
void draw_bitmap_part_onto(bitmap dest, bitmap src, int32_t srcX, int32_t srcY, int32_t srcW, int32_t srcH, int32_t x, int32_t y);
void draw_bitmap_part_from_rect_at_point_on_screen(bitmap src, const rectangle *source, const point2d *position);
void draw_bitmap_part_from_rect_at_point_on_screen_byval(bitmap src, const rectangle source, const point2d position);
void draw_bitmap_part_from_rect_on_screen(bitmap src, const rectangle *source, int32_t x, int32_t y);
void draw_bitmap_part_from_rect_on_screen_byval(bitmap src, const rectangle source, int32_t x, int32_t y);
void draw_bitmap_part_on_screen(bitmap src, int32_t srcX, int32_t srcY, int32_t srcW, int32_t srcH, int32_t x, int32_t y);
void draw_cell(bitmap src, int32_t cell, const point2d *position);
void draw_cell_byval(bitmap src, int32_t cell, const point2d position);
void draw_cell_onto(bitmap dest, bitmap src, int32_t cell, const point2d *position);
void draw_cell_onto_byval(bitmap dest, bitmap src, int32_t cell, const point2d position);
void draw_cell_xy(bitmap src, int32_t cell, float x, float y);
void draw_cell_onto_xy(bitmap dest, bitmap src, int32_t cell, float x, float y);
void draw_cell_on_screen(bitmap src, int32_t cell, const point2d *position);
void draw_cell_on_screen_byval(bitmap src, int32_t cell, const point2d position);
void draw_cell_on_screen_xy(bitmap src, int32_t cell, float x, float y);
void free_bitmap(bitmap *bitmapToFree);
bool has_bitmap(const char *name);
bitmap load_bitmap(const char *filename);
bitmap load_bitmap_with_transparent_color(const char *filename, bool transparent, color transparentColor);
bitmap load_bitmap_named(const char *name, const char *filename);
bitmap load_transparent_bitmap(const char *filename, color transparentColor);
bitmap load_transparent_bitmap_named(const char *name, const char *filename, color transparentColor);
void make_opaque(bitmap bmp);
void make_transparent(bitmap bmp);
void optimise_bitmap(bitmap surface);
bool pixel_drawn_at_point(bitmap bmp, int32_t x, int32_t y);
void release_all_bitmaps();
void release_bitmap(const char *name);
bitmap rotate_scale_bitmap(bitmap src, float degRot, float scale);
bool same_bitmap_cell(const bitmap_cell *bmp1, const bitmap_cell *bmp2);
bool same_bitmap_cell_byval(const bitmap_cell bmp1, const bitmap_cell bmp2);
void save_bitmap(bitmap src, const char *filepath);
void save_to_png(bitmap bmp, const char *filename);
void set_opacity(bitmap bmp, float pct);
void set_transparent_color(bitmap src, color clr);
void setup_bitmap_for_collisions(bitmap src);
#endif

