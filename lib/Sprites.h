/*
* Generated by SGWrapperGen - DO NOT EDIT!
*
* SwinGame wrapper for C - Sprites
*
* Wrapping sgSprites.pas
*/

#include <stdbool.h>
#include <stdint.h>

#ifndef sgSprites
#define sgSprites
#include "Types.h"

point2d center_point(sprite s);
sprite create_basic_sprite(bitmap layer);
sprite create_layered_sprite(const bitmap *layers, int32_t layers_len);
sprite create_layered_sprite_byval(const bitmap *layers, int32_t layers_len);
sprite create_sprite_with_layer(bitmap layer, const char *layerName);
sprite create_basic_sprite_pt(bitmap layer, point2d pt);
sprite create_basic_sprite_named(const char *name, bitmap layer);
sprite create_layered_sprite_with_layer_names(const bitmap *layers, const string_array layerNames, int32_t layers_len, int32_t layerNames_len);
sprite create_layered_sprite_with_layer_names_byval(const bitmap *layers, const string_array layerNames, int32_t layers_len, int32_t layerNames_len);
sprite create_sprite_with_animation(bitmap layer, animation_script ani);
sprite create_layered_sprite_named(const char *name, const bitmap *layers, int32_t layers_len);
sprite create_layered_sprite_named_byval(const char *name, const bitmap *layers, int32_t layers_len);
sprite create_layered_sprite_with_animation_script(const bitmap *layers, animation_script ani, int32_t layers_len);
sprite create_layered_sprite_with_animation_script_byval(const bitmap *layers, animation_script ani, int32_t layers_len);
sprite create_sprite_with_animation_named(const char *name, bitmap layer, animation_script ani);
sprite create_sprite_with_animation_pt(bitmap layer, animation_script ani, point2d pt);
sprite create_sprite_with_layer_named(const char *name, bitmap layer, const char *layerName);
sprite create_layered_sprite_with_layer_names_and_animation_script(const bitmap *layers, const string_array layerNames, animation_script ani, int32_t layers_len, int32_t layerNames_len);
sprite create_layered_sprite_with_layer_names_and_animation_script_byval(const bitmap *layers, const string_array layerNames, animation_script ani, int32_t layers_len, int32_t layerNames_len);
sprite create_sprite_with_layer_and_animation(bitmap layer, const char *layerName, animation_script ani);
sprite create_layered_sprite_with_layer_names_named(const char *name, const bitmap *layers, const string_array layerNames, int32_t layers_len, int32_t layerNames_len);
sprite create_layered_sprite_with_layer_names_named_byval(const char *name, const bitmap *layers, const string_array layerNames, int32_t layers_len, int32_t layerNames_len);
sprite create_layered_sprite_with_animation_script_named(const char *name, const bitmap *layers, animation_script ani, int32_t layers_len);
sprite create_layered_sprite_with_animation_script_named_byval(const char *name, const bitmap *layers, animation_script ani, int32_t layers_len);
sprite create_basic_sprite_xy(bitmap layer, float x, float y);
sprite create_sprite_with_layer_and_animation_named(const char *name, bitmap layer, const char *layerName, animation_script ani);
sprite create_sprite_with_animation_xy(bitmap layer, animation_script ani, float x, float y);
sprite create_layered_sprite_with_layer_names_and_animation_script_named(const char *name, const bitmap *layers, const string_array layerNames, animation_script ani, int32_t layers_len, int32_t layerNames_len);
sprite create_layered_sprite_with_layer_names_and_animation_script_named_byval(const char *name, const bitmap *layers, const string_array layerNames, animation_script ani, int32_t layers_len, int32_t layerNames_len);
void draw_sprite(sprite s);
void draw_sprite_offset_point(sprite s, const point2d *position);
void draw_sprite_offset_point_byval(sprite s, const point2d position);
void draw_sprite_offset_xy(sprite s, int32_t xOffset, int32_t yOffset);
void free_sprite(sprite *s);
bool has_sprite(const char *name);
void move_sprite(sprite s);
void move_sprite_vec(sprite s, const vector *distance);
void move_sprite_vec_byval(sprite s, const vector distance);
void move_sprite_pct(sprite s, float pct);
void move_sprite_vec_pct(sprite s, const vector *distance, float pct);
void move_sprite_vec_pct_byval(sprite s, const vector distance, float pct);
void move_sprite_to(sprite s, int32_t x, int32_t y);
void release_all_sprites();
void release_sprite(const char *name);
int32_t sprite_add_layer(sprite s, bitmap newLayer, const char *layerName);
void sprite_add_to_velocity(sprite s, const vector *value);
void sprite_add_to_velocity_byval(sprite s, const vector value);
void sprite_add_value(sprite s, const char *name);
void sprite_add_value_with_initial_value(sprite s, const char *name, float initVal);
bool sprite_animation_has_ended(sprite s);
void sprite_bring_layer_forward(sprite s, int32_t visibleLayer);
void sprite_bring_layer_to_front(sprite s, int32_t visibleLayer);
circle sprite_circle(sprite s);
bitmap sprite_collision_bitmap(sprite s);
circle sprite_collision_circle(sprite s);
collision_test_kind sprite_collision_kind(sprite s);
rectangle sprite_collision_rectangle(sprite s);
int32_t sprite_current_cell(sprite s);
rectangle sprite_current_cell_rectangle(sprite s);
float sprite_dx(sprite s);
float sprite_dy(sprite s);
float sprite_heading(sprite s);
int32_t sprite_height(sprite s);
void sprite_hide_layer_named(sprite s, const char *name);
void sprite_hide_layer(sprite s, int32_t id);
bitmap sprite_layer_at_idx(sprite s, int32_t idx);
bitmap sprite_layer_named(sprite s, const char *name);
circle sprite_layer_circle(sprite s, int32_t idx);
circle sprite_layer_named_circle(sprite s, const char *name);
int32_t sprite_layer_count(sprite s);
int32_t sprite_layer_named_height(sprite s, const char *name);
int32_t sprite_layer_height(sprite s, int32_t idx);
int32_t sprite_layer_index(sprite s, const char *name);
void sprite_layer_name(sprite s, int32_t idx, char *result);
point2d sprite_layer_offset_named(sprite s, const char *name);
point2d sprite_layer_offset(sprite s, int32_t idx);
void sprite_layer_offsets(sprite s, point2d *result, int32_t result_len);
rectangle sprite_layer_named_rectangle(sprite s, const char *name);
rectangle sprite_layer_rectangle(sprite s, int32_t idx);
int32_t sprite_layer_named_width(sprite s, const char *name);
int32_t sprite_layer_width(sprite s, int32_t idx);
void sprite_layers(sprite s, bitmap *result, int32_t result_len);
float sprite_mass(sprite s);
void sprite_name(sprite sprt, char *result);
sprite sprite_named(const char *name);
bool sprite_offscreen(sprite s);
bool sprite_on_screen_at_point(sprite s, const point2d *pt);
bool sprite_on_screen_at_point_byval(sprite s, const point2d pt);
bool sprite_on_screen_at(sprite s, int32_t x, int32_t y);
point2d sprite_position(sprite s);
void sprite_replay_animation(sprite s);
void replay_animation_with_sound(sprite s, bool withSound);
float sprite_rotation(sprite s);
float sprite_scale(sprite s);
rectangle sprite_screen_rectangle(sprite s);
void sprite_send_layer_backward(sprite s, int32_t visibleLayer);
void sprite_send_layer_to_back(sprite s, int32_t visibleLayer);
void sprite_set_collision_bitmap(sprite s, bitmap bmp);
void sprite_set_collision_kind(sprite s, collision_test_kind value);
void sprite_set_dx(sprite s, float value);
void sprite_set_dy(sprite s, float value);
void sprite_set_heading(sprite s, float value);
void sprite_set_layer_offset_named(sprite s, const char *name, const point2d *value);
void sprite_set_layer_offset_named_byval(sprite s, const char *name, const point2d value);
void sprite_set_layer_offset(sprite s, int32_t idx, const point2d *value);
void sprite_set_layer_offset_byval(sprite s, int32_t idx, const point2d value);
void sprite_set_layer_offsets(sprite s, const point2d *values, int32_t values_len);
void sprite_set_layer_offsets_byval(sprite s, const point2d *values, int32_t values_len);
void sprite_set_mass(sprite s, float value);
void sprite_set_position(sprite s, const point2d *value);
void sprite_set_position_byval(sprite s, const point2d value);
void sprite_set_rotation(sprite s, float value);
void sprite_set_scale(sprite s, float value);
void sprite_set_speed(sprite s, float value);
void sprite_set_value_named(sprite s, const char *name, float val);
void sprite_set_value(sprite s, int32_t idx, float val);
void sprite_set_velocity(sprite s, const vector *value);
void sprite_set_velocity_byval(sprite s, const vector value);
void sprite_set_x(sprite s, float value);
void sprite_set_y(sprite s, float value);
int32_t sprite_show_layer(sprite s, int32_t id);
int32_t sprite_show_layer_named(sprite s, const char *name);
float sprite_speed(sprite s);
void sprite_start_animation(sprite s, int32_t idx);
void sprite_start_animation_named(sprite s, const char *named);
void sprite_start_animation_named_with_sound(sprite s, const char *named, bool withSound);
void sprite_start_animation_with_sound(sprite s, int32_t idx, bool withSound);
void sprite_toggle_layer_visible(sprite s, int32_t id);
void sprite_toggle_layer_named_visible(sprite s, const char *name);
float sprite_value(sprite s, int32_t index);
float sprite_value_named(sprite s, const char *name);
int32_t sprite_value_count(sprite s);
void sprite_value_names(sprite s, string_array result, int32_t result_len);
vector sprite_velocity(sprite s);
int32_t sprite_visible_index_of_layer(sprite s, int32_t id);
int32_t sprite_visible_index_of_layer_named(sprite s, const char *name);
int32_t sprite_visible_layer(sprite s, int32_t idx);
int32_t sprite_visible_layer_count(sprite s);
void sprite_visible_layer_ids(sprite s, int32_t *result, int32_t result_len);
int32_t sprite_width(sprite s);
float sprite_x(sprite s);
float sprite_y(sprite s);
void update_sprite(sprite s);
void update_sprite_with_sound(sprite s, bool withSound);
void update_sprite_percent(sprite s, float pct);
void update_sprite_pct_with_sound(sprite s, float pct, bool withSound);
void update_sprite_animation(sprite s);
void update_sprite_animation_percent(sprite s, float pct);
void update_sprite_animation_with_sound(sprite s, bool withSound);
void update_sprite_animation_pct_with_sound(sprite s, float pct, bool withSound);
vector vector_from_center_sprite_to_point(sprite s, const point2d *pt);
vector vector_from_center_sprite_to_point_byval(sprite s, const point2d pt);
vector vector_from_to(sprite s1, sprite s2);
#endif

